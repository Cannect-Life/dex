name: dex_deploy_dags

on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      requirements: ${{ steps.changes.outputs.requirements }}
      plugins: ${{ steps.changes.outputs.plugins }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          requirements:
            - 'requirements.txt'
          plugins:
            - 'airflow/plugins/**'   
  
  deploy_dex_automated_dags:
    env:
      DEXCTL_SCHEDULER_MWAA_AWS_ACCESS_KEY: "${{ secrets.MWAA_DAG_AUTOMATION_ACCESS_KEY }}"
      DEXCTL_SCHEDULER_MWAA_AWS_SECRET_KEY: "${{ secrets.MWAA_DAG_AUTOMATION_SECRET_KEY }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # Check if 'models' directory has any files
      - name: Check if models directory exists and is not empty
        id: check-dir
        run: |
          if [[! -d "models" ||! -f "models/.gitkeep" ]]; then
            echo "::set-output name=empty::true"
          else
            echo "::set-output name=empty::false"
          fi
      - name: Update Dags
        if: steps.check-dir.outputs.empty == 'false'
        uses: docker://us-east1-docker.pkg.dev/dex-apps-prod/dexctl/dexctl:v0.6.5
        with:
          args: dexctl sched update --api-key ${{ secrets.DEX_API_KEY }}

  deploy_static_dags:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MWAA_DAG_AUTOMATION_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MWAA_DAG_AUTOMATION_SECRET_KEY }}
          aws-region: us-east-2  
      - name: Sync DAGs to S3
        run: aws s3 sync ./airflow/dags s3://${{ secrets.S3_BUCKET }}/dags
  
  build_plugins:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.requirements == 'true' }} || ${{ needs.changes.outputs.plugins == 'true' }}
    container:
      image: public.ecr.aws/r1r8h6c0/mwaa-deps-builder:2.6.3-latest
      options: --user root
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare plugin directories and package
        run: |
          mkdir -p /usr/local/airflow/requirements
          mkdir -p /usr/local/airflow/plugins
          cp ./requirements.txt /usr/local/airflow/requirements
          /entrypoint.sh package-requirements
          cp -r ./airflow/plugins/* /usr/local/airflow/plugins/
          cp -r /usr/local/airflow/plugins .
          cd plugins && zip -r ../plugins.zip . && cd ..
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: plugins
          path: ./plugins.zip

  deploy_plugins:
    needs: [build_plugins, changes]
    if: ${{ needs.changes.outputs.requirements == 'true' }} || ${{ needs.changes.outputs.plugins == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MWAA_DAG_AUTOMATION_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MWAA_DAG_AUTOMATION_SECRET_KEY }}
          aws-region: us-east-2  
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: plugins
      - name: Deploy plugins to S3
        run: aws s3 cp ./plugins.zip s3://${{ secrets.S3_BUCKET }}/plugins.zip

  update_requirements_deps_reference:
    needs: [build_plugins, changes]
    if: ${{ needs.changes.outputs.requirements == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MWAA_DAG_AUTOMATION_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MWAA_DAG_AUTOMATION_SECRET_KEY }}
          aws-region: us-east-2  
      - name: Update requirements file
        run: |
          echo -e "--find-links /usr/local/airflow/plugins\n--no-index\n\n$(cat ./requirements.txt)" > airflow/requirements.txt
          aws s3 cp airflow/requirements.txt s3://${{ secrets.S3_BUCKET }}/requirements.txt

  update_mwaa_environment:
    runs-on: ubuntu-latest

    needs: [changes, deploy_plugins, update_requirements_deps_reference]
    if: ${{ needs.changes.outputs.requirements == 'true' }} || ${{ needs.changes.outputs.plugins == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MWAA_DAG_AUTOMATION_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MWAA_DAG_AUTOMATION_SECRET_KEY }}
          aws-region: us-east-2

      - name: Get S3 Object Version for Requirements
        id: req_version
        run: |
          version=$(aws s3api head-object --bucket ${{ secrets.S3_BUCKET }} --key requirements.txt --query VersionId --output text)
          echo "req_version=$version" >> $GITHUB_OUTPUT

      - name: Get S3 Object Version for Plugins
        id: plugins_version
        run: |
          version=$(aws s3api head-object --bucket ${{ secrets.S3_BUCKET }} --key plugins.zip --query VersionId --output text)
          echo "plugins_version=$version" >> $GITHUB_OUTPUT

      - name: Update MWAA Environment
        run: |
          aws mwaa update-environment --name ${{ vars.MWAA_ENV_NAME }} --source-bucket-arn "arn:aws:s3:::${{ secrets.S3_BUCKET }}" --plugins-s3-object-version ${{ steps.plugins_version.outputs.plugins_version }} --requirements-s3-object-version ${{ steps.req_version.outputs.req_version }}
